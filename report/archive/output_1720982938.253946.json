{"content": {"suites": {"0": {"status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 12, "total_error": 0}, "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_goals_get[Get goals]", "rerun": "0"}, "1": {"status": "FAIL", "message": "       assert 404 == 200\n        +  where 404 = <Response [404]>.status_code\n", "test_name": "test_goal_workflow[None-200-Get goal]", "rerun": "0"}, "2": {"status": "FAIL", "message": "       assert 404 == 200\n        +  where 404 = <Response [404]>.status_code\n", "test_name": "test_goal_workflow[None-200-Create goal]", "rerun": "0"}, "3": {"status": "FAIL", "message": "       assert 404 == 200\n        +  where 404 = <Response [404]>.status_code\n", "test_name": "test_goal_workflow[None-200-Update goal]", "rerun": "0"}, "4": {"status": "FAIL", "message": "       assert 404 == 200\n        +  where 404 = <Response [404]>.status_code\n", "test_name": "test_goal_workflow[None-200-Delete goal]", "rerun": "0"}, "5": {"status": "FAIL", "message": "       json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n", "test_name": "test_goal_workflow[-404-Get goal]", "rerun": "0"}, "6": {"status": "FAIL", "message": "       json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n", "test_name": "test_goal_workflow[-404-Create goal]", "rerun": "0"}, "7": {"status": "FAIL", "message": "       json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n", "test_name": "test_goal_workflow[-404-Update goal]", "rerun": "0"}, "8": {"status": "FAIL", "message": "       json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n", "test_name": "test_goal_workflow[-404-Delete goal]", "rerun": "0"}, "9": {"status": "FAIL", "message": "       assert 404 == 500\n        +  where 404 = <Response [404]>.status_code\n", "test_name": "test_goal_workflow[invalidtype-500-Get goal]", "rerun": "0"}, "10": {"status": "FAIL", "message": "       assert 404 == 500\n        +  where 404 = <Response [404]>.status_code\n", "test_name": "test_goal_workflow[invalidtype-500-Create goal]", "rerun": "0"}, "11": {"status": "FAIL", "message": "       assert 404 == 500\n        +  where 404 = <Response [404]>.status_code\n", "test_name": "test_goal_workflow[invalidtype-500-Update goal]", "rerun": "0"}, "12": {"status": "FAIL", "message": "       assert 404 == 500\n        +  where 404 = <Response [404]>.status_code\n", "test_name": "test_goal_workflow[invalidtype-500-Delete goal]", "rerun": "0"}}, "suite_name": "Tests/test_goals_methods.py"}}}, "date": "July 14, 2024", "start_time": 1720982719.242037, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "1", "fail": "12", "skip": "0", "error": "0", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "13"}